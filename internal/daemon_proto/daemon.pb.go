// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: internal/daemon_proto/daemon.proto

// Package name for generated Go code (imported as pb)

package daemon_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AllocateRequest identifies the node for which to allocate IP.
type AllocateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllocateRequest) Reset() {
	*x = AllocateRequest{}
	mi := &file_internal_daemon_proto_daemon_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllocateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateRequest) ProtoMessage() {}

func (x *AllocateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_daemon_proto_daemon_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateRequest.ProtoReflect.Descriptor instead.
func (*AllocateRequest) Descriptor() ([]byte, []int) {
	return file_internal_daemon_proto_daemon_proto_rawDescGZIP(), []int{0}
}

func (x *AllocateRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

// AllocateResponse returns the IPv4 address and CIDR prefix.
type AllocateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ip            string                 `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`          // e.g., "100.64.0.5"
	Prefix        uint32                 `protobuf:"varint,2,opt,name=prefix,proto3" json:"prefix,omitempty"` // e.g., 32
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllocateResponse) Reset() {
	*x = AllocateResponse{}
	mi := &file_internal_daemon_proto_daemon_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllocateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateResponse) ProtoMessage() {}

func (x *AllocateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_daemon_proto_daemon_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateResponse.ProtoReflect.Descriptor instead.
func (*AllocateResponse) Descriptor() ([]byte, []int) {
	return file_internal_daemon_proto_daemon_proto_rawDescGZIP(), []int{1}
}

func (x *AllocateResponse) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *AllocateResponse) GetPrefix() uint32 {
	if x != nil {
		return x.Prefix
	}
	return 0
}

// ReleaseRequest identifies the node to shut down.
type ReleaseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseRequest) Reset() {
	*x = ReleaseRequest{}
	mi := &file_internal_daemon_proto_daemon_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseRequest) ProtoMessage() {}

func (x *ReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_daemon_proto_daemon_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseRequest.ProtoReflect.Descriptor instead.
func (*ReleaseRequest) Descriptor() ([]byte, []int) {
	return file_internal_daemon_proto_daemon_proto_rawDescGZIP(), []int{2}
}

func (x *ReleaseRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

// ReleaseResponse is empty (acknowledgment).
type ReleaseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseResponse) Reset() {
	*x = ReleaseResponse{}
	mi := &file_internal_daemon_proto_daemon_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseResponse) ProtoMessage() {}

func (x *ReleaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_daemon_proto_daemon_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseResponse.ProtoReflect.Descriptor instead.
func (*ReleaseResponse) Descriptor() ([]byte, []int) {
	return file_internal_daemon_proto_daemon_proto_rawDescGZIP(), []int{3}
}

var File_internal_daemon_proto_daemon_proto protoreflect.FileDescriptor

const file_internal_daemon_proto_daemon_proto_rawDesc = "" +
	"\n" +
	"\"internal/daemon_proto/daemon.proto\x12\x06daemon\"*\n" +
	"\x0fAllocateRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\":\n" +
	"\x10AllocateResponse\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\tR\x02ip\x12\x16\n" +
	"\x06prefix\x18\x02 \x01(\rR\x06prefix\")\n" +
	"\x0eReleaseRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\"\x11\n" +
	"\x0fReleaseResponse2\x83\x01\n" +
	"\x06Daemon\x12=\n" +
	"\bAllocate\x12\x17.daemon.AllocateRequest\x1a\x18.daemon.AllocateResponse\x12:\n" +
	"\aRelease\x12\x16.daemon.ReleaseRequest\x1a\x17.daemon.ReleaseResponseBDZBgithub.com/eliottcassidy2000/monad-forwarder/internal/daemon_protob\x06proto3"

var (
	file_internal_daemon_proto_daemon_proto_rawDescOnce sync.Once
	file_internal_daemon_proto_daemon_proto_rawDescData []byte
)

func file_internal_daemon_proto_daemon_proto_rawDescGZIP() []byte {
	file_internal_daemon_proto_daemon_proto_rawDescOnce.Do(func() {
		file_internal_daemon_proto_daemon_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_daemon_proto_daemon_proto_rawDesc), len(file_internal_daemon_proto_daemon_proto_rawDesc)))
	})
	return file_internal_daemon_proto_daemon_proto_rawDescData
}

var file_internal_daemon_proto_daemon_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_internal_daemon_proto_daemon_proto_goTypes = []any{
	(*AllocateRequest)(nil),  // 0: daemon.AllocateRequest
	(*AllocateResponse)(nil), // 1: daemon.AllocateResponse
	(*ReleaseRequest)(nil),   // 2: daemon.ReleaseRequest
	(*ReleaseResponse)(nil),  // 3: daemon.ReleaseResponse
}
var file_internal_daemon_proto_daemon_proto_depIdxs = []int32{
	0, // 0: daemon.Daemon.Allocate:input_type -> daemon.AllocateRequest
	2, // 1: daemon.Daemon.Release:input_type -> daemon.ReleaseRequest
	1, // 2: daemon.Daemon.Allocate:output_type -> daemon.AllocateResponse
	3, // 3: daemon.Daemon.Release:output_type -> daemon.ReleaseResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_internal_daemon_proto_daemon_proto_init() }
func file_internal_daemon_proto_daemon_proto_init() {
	if File_internal_daemon_proto_daemon_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_daemon_proto_daemon_proto_rawDesc), len(file_internal_daemon_proto_daemon_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_daemon_proto_daemon_proto_goTypes,
		DependencyIndexes: file_internal_daemon_proto_daemon_proto_depIdxs,
		MessageInfos:      file_internal_daemon_proto_daemon_proto_msgTypes,
	}.Build()
	File_internal_daemon_proto_daemon_proto = out.File
	file_internal_daemon_proto_daemon_proto_goTypes = nil
	file_internal_daemon_proto_daemon_proto_depIdxs = nil
}
